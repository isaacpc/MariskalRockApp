package com.isaacpc.mariskalrock.bd;

import android.database.sqlite.SQLiteDatabase;

import java.util.Map;

import de.greenrobot.dao.AbstractDao;
import de.greenrobot.dao.AbstractDaoSession;
import de.greenrobot.dao.identityscope.IdentityScopeType;
import de.greenrobot.dao.internal.DaoConfig;

import com.isaacpc.mariskalrock.bd.NoticiaEntity;
import com.isaacpc.mariskalrock.bd.PodcastEntity;
import com.isaacpc.mariskalrock.bd.VideoEntity;

import com.isaacpc.mariskalrock.bd.NoticiaEntityDao;
import com.isaacpc.mariskalrock.bd.PodcastEntityDao;
import com.isaacpc.mariskalrock.bd.VideoEntityDao;

// THIS CODE IS GENERATED BY greenDAO, DO NOT EDIT.

/**
 * {@inheritDoc}
 * 
 * @see de.greenrobot.dao.AbstractDaoSession
 */
public class DaoSession extends AbstractDaoSession {

    private final DaoConfig noticiaEntityDaoConfig;
    private final DaoConfig podcastEntityDaoConfig;
    private final DaoConfig videoEntityDaoConfig;

    private final NoticiaEntityDao noticiaEntityDao;
    private final PodcastEntityDao podcastEntityDao;
    private final VideoEntityDao videoEntityDao;

    public DaoSession(SQLiteDatabase db, IdentityScopeType type, Map<Class<? extends AbstractDao<?, ?>>, DaoConfig> daoConfigMap) {
	super(db);

	noticiaEntityDaoConfig = daoConfigMap.get(NoticiaEntityDao.class).clone();
	noticiaEntityDaoConfig.initIdentityScope(type);

	podcastEntityDaoConfig = daoConfigMap.get(PodcastEntityDao.class).clone();
	podcastEntityDaoConfig.initIdentityScope(type);

	videoEntityDaoConfig = daoConfigMap.get(VideoEntityDao.class).clone();
	videoEntityDaoConfig.initIdentityScope(type);

	noticiaEntityDao = new NoticiaEntityDao(noticiaEntityDaoConfig, this);
	podcastEntityDao = new PodcastEntityDao(podcastEntityDaoConfig, this);
	videoEntityDao = new VideoEntityDao(videoEntityDaoConfig, this);

	registerDao(NoticiaEntity.class, noticiaEntityDao);
	registerDao(PodcastEntity.class, podcastEntityDao);
	registerDao(VideoEntity.class, videoEntityDao);
    }

    public void clear() {
	noticiaEntityDaoConfig.getIdentityScope().clear();
	podcastEntityDaoConfig.getIdentityScope().clear();
	videoEntityDaoConfig.getIdentityScope().clear();
    }

    public NoticiaEntityDao getNoticiaEntityDao() {
	return noticiaEntityDao;
    }

    public PodcastEntityDao getPodcastEntityDao() {
	return podcastEntityDao;
    }

    public VideoEntityDao getVideoEntityDao() {
	return videoEntityDao;
    }

}
